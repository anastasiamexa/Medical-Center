@model Medical_Center.Models.Appointment

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    TempData["message2"] = Html.Encode(User.Identity.Name); // sending username of user back to AppointmentsController
    string data = TempData["message1"].ToString();
    <div style="color:red;">@Html.ValidationSummary()</div>
    <div class="form-horizontal">
        <h4>Appointment</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startSlotTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.startSlotTime, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.startSlotTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endSlotTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.endSlotTime, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.endSlotTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.PATIENT_patientAMKA, new { @Value = "00000000000", @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.PATIENT_patientAMKA, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.DOCTOR_doctorAMKA, "DOCTOR_doctorAMKA", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DOCTOR_doctorAMKA, new { @Value = data, @readonly = "readonly", @required = "required" })
                @Html.ValidationMessageFor(model => model.DOCTOR_doctorAMKA, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.isAvailable, new { @Value = true, @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.isAvailable, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
